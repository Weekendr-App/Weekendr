# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

scalar Bounds

"""Category"""
type Category {
  icon: String
  id: ID!
  name: String!
}

input CreateEventInput {
  categoryId: Float!
  description: String
  endDate: Date!
  name: String!
  picture: String
  price: Float!
  startDate: Date!
  venueId: Float!
}

input CreateVenueInput {
  address: String!
  latitude: Float!
  longitude: Float!
  name: String!
  phone: String!
  picture: String!
}

"""Date custom scalar type"""
scalar Date

"""Event"""
type Event {
  category: Category!
  createdAt: Date!
  deletedAt: Date
  description: String
  endDate: Date!
  id: ID!
  name: String!
  picture: String
  price: Float!
  startDate: Date!
  status: EventStatus!
  updatedAt: Date!
  venue: Venue!
}

enum EventStatus {
  CANCELLED
  DRAFT
  PUBLISHED
}

input GetVenuesInRangeInput {
  bounds: Bounds!
}

type Mutation {
  cancelEvent(eventId: Float!): Event!
  createEvent(fields: CreateEventInput!): Event!
  createVenue(fields: CreateVenueInput!): Venue!
  deleteVenue(id: Float!): Venue!
  publishVenue(id: Float!): Venue!
  registerUser(user: RegisterUserInput!): RegisterUserResponse!
  updateVenue(fields: UpdateVenueInput!): Venue!
}

type Query {
  categories: [Category!]!
  draftVenues: [Venue!]!
  event(eventId: Float!): Event!
  me: User!
  venue(id: Float!): Venue!
  venueEvents(venueId: Float!): [Event!]!
  venuesInRange(fields: GetVenuesInRangeInput!): [Venue!]!
}

input RegisterUserInput {
  email: String!
  password: String!
  taxReturnsPicture: String!
}

"""Firebase registration response"""
type RegisterUserResponse {
  message: String!
  success: Boolean!
}

"""User role"""
enum Role {
  MODERATOR
  OWNER
}

input UpdateVenueInput {
  address: String!
  id: Float!
  latitude: Float!
  longitude: Float!
  name: String!
  phone: String!
  picture: String!
}

"""User"""
type User {
  email: String!
  id: ID!
  role: Role!
  venues: [Venue!]!
}

"""Venue"""
type Venue {
  address: String!
  createdAt: Date!
  deletedAt: Date
  events: [Event!]
  id: ID!
  isOwnedByMe: Boolean
  latitude: Float!
  longitude: Float!
  name: String!
  phone: String!
  picture: String!
  status: VenueStatus!
  updatedAt: Date!
}

enum VenueStatus {
  ACTIVE
  DRAFT
}